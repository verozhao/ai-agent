apiVersion: apps/v1
kind: Deployment
metadata:
  name: doc-extraction-api
  namespace: doc-extraction
  labels:
    app: doc-extraction
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: doc-extraction
      component: api
  template:
    metadata:
      labels:
        app: doc-extraction
        component: api
    spec:
      serviceAccountName: doc-extraction
      containers:
      - name: api
        image: registry.company.com/doc-extraction:v2.1.0
        ports:
        - name: http
          containerPort: 8000
        - name: metrics
          containerPort: 9090
        env:
        - name: APP_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: doc-extraction-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: doc-extraction-secrets
              key: redis-url
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: doc-extraction-secrets
              key: api-key
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: models
          mountPath: /app/models
          readOnly: true
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: model-storage
      - name: config
        configMap:
          name: doc-extraction-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: doc-extraction
spec:
  replicas: 5
  selector:
    matchLabels:
      app: doc-extraction
      component: celery-worker
  template:
    metadata:
      labels:
        app: doc-extraction
        component: celery-worker
    spec:
      containers:
      - name: celery-worker
        image: registry.company.com/doc-extraction:v2.1.0
        command: ["celery", "-A", "tasks.celery_app", "worker", "--loglevel=info"]
        env:
        - name: APP_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: doc-extraction-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: doc-extraction-secrets
              key: redis-url
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: "1"  # GPU support for ML workloads

---
apiVersion: v1
kind: Service
metadata:
  name: doc-extraction-api
  namespace: doc-extraction
spec:
  selector:
    app: doc-extraction
    component: api
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doc-extraction-ingress
  namespace: doc-extraction
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - api.docextraction.company.com
    secretName: doc-extraction-tls
  rules:
  - host: api.docextraction.company.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: doc-extraction-api
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: doc-extraction-api-hpa
  namespace: doc-extraction
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: doc-extraction-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: doc-extraction-config
  namespace: doc-extraction
data:
  models.yaml: |
    extraction:
      model: "microsoft/layoutlmv3-base"
      batch_size: 32
      max_length: 512
      confidence_threshold: 0.85
    
    anomaly_detection:
      model: "custom-lstm-ensemble"
      window_size: 100
      threshold: 0.7
      eval_set_2_threshold: 0.5
    
    feedback_loop:
      update_frequency: "weekly"
      min_samples: 100
      improvement_threshold: 0.02

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: quarterly-processor
  namespace: doc-extraction
spec:
  schedule: "0 0 1 */3 *"  # First day of each quarter
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: quarterly-processor
            image: registry.company.com/doc-extraction:v2.1.0
            command: ["python", "scripts/quarterly_processor.py"]
            env:
            - name: QUARTER
              value: "$(date +%q)"
          restartPolicy: OnFailure


# requirements/prod.txt
# Core dependencies
fastapi==0.104.1
uvicorn[standard]==0.24.0
pydantic==2.5.0
python-multipart==0.0.6

# Database
sqlalchemy==2.0.23
alembic==1.12.1
psycopg2-binary==2.9.9
redis==5.0.1

# ML/AI
torch==2.1.1
transformers==4.35.2
scikit-learn==1.3.2
numpy==1.26.2
pandas==2.1.3
spacy==3.7.2

# Document processing
pytesseract==0.3.10
pdf2image==1.16.3
python-docx==1.1.0
openpyxl==3.1.2
Pillow==10.1.0

# Message queue
celery==5.3.4
kafka-python==2.0.2

# Monitoring
prometheus-client==0.19.0
prometheus-fastapi-instrumentator==6.1.0
opentelemetry-api==1.21.0
opentelemetry-sdk==1.21.0

# Utils
python-jose[cryptography]==3.3.0
passlib[bcrypt]==1.7.4
httpx==0.25.2
tenacity==8.2.3
pyyaml==6.0.1
python-dotenv==1.0.0

# Logging
structlog==23.2.0
python-json-logger==2.0.7